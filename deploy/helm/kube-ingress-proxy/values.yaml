image:
  repository: ghcr.io/meln5674/kube-ingress-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  # If true, will create a [Cluster]Role and [Cluster]RoleBinding to grant the service account read access to ingresses
  create: true
  # If true, use Cluster-scoped RBAC
  allNamespaces: true
  # If allNamespaces is false, create namespaced-scoped RBAC for each namespace listed
  namespaces: []

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

hostPort:
  enabled: false
  port: 8080

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}


# Address to listen on
listenAddress: 0.0.0.0

# Mapping from ingressClassName to the DNS name of the matching controller within the cluster
controllerAddresses: {}
#  - className: nginx
#    address: ingress-nginx-controller.ingress-nginx.svc.cluster.local



istio:
  # If enabled, will monitor for VirtualServices as well as ingresses
  enabled: false
  # Mapping from istio gateway namespace/name to the DNS name of the matching service within the cluster
  istioGatewayAddresses: {}
  #  - namespace: gateway-namespace
  #    name: gateway-name
  #    address: gateway-service.gateway-service-namespace.svc.cluster.local

# Log level, argument to klog -v
logVerbosity: 0

# Extra container/pod spec elements
extraArgs: []
extraEnv: []
extraVolumes: []
extraVolumeMounts: []
extraContainers: []
extraInitContainers: []
